services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: movie_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - movie_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    image: idanrachmany/movie2-backend:latest
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=movie_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRES_IN=24h
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - movie_network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend React App
  frontend:
    build: ./frontend
    image: idanrachmany/movie2-frontend:latest
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - movie_network
    # volumes removed for production/preview mode; allows serving built files from image

volumes:
  postgres_data:

networks:
  movie_network:
    driver: bridge
